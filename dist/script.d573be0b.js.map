{"version":3,"sources":["js/script.js"],"names":["API_URL","document","addEventListener","getElementById","getStudents","addStudent","fetch","then","res","json","data","renderStudents","catch","err","console","error","students","tbody","querySelector","innerHTML","forEach","student","tr","createElement","concat","id","name","age","course","skills","email","isEnrolled","appendChild","updateStudent","deleteStudent","e","preventDefault","value","trim","Number","checked","method","headers","body","JSON","stringify","target","reset","prompt"],"mappings":"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","file":"script.d573be0b.js","sourceRoot":"..","sourcesContent":["const API_URL = \"http://localhost:3000/students\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  document\r\n    .getElementById(\"get-students-btn\")\r\n    .addEventListener(\"click\", getStudents);\r\n  document\r\n    .getElementById(\"add-student-form\")\r\n    .addEventListener(\"submit\", addStudent);\r\n});\r\n\r\nfunction getStudents() {\r\n  fetch(API_URL)\r\n    .then((res) => res.json())\r\n    .then((data) => renderStudents(data))\r\n    .catch((err) => console.error(\"Помилка отримання студентів:\", err));\r\n}\r\n\r\nfunction renderStudents(students) {\r\n  const tbody = document.querySelector(\"#students-table tbody\");\r\n  tbody.innerHTML = \"\";\r\n\r\n  students.forEach((student) => {\r\n    const tr = document.createElement(\"tr\");\r\n    tr.innerHTML = `\r\n      <td>${student.id}</td>\r\n      <td>${student.name}</td>\r\n      <td>${student.age}</td>\r\n      <td>${student.course || \"\"}</td>\r\n      <td>${student.skills || \"\"}</td>\r\n      <td>${student.email || \"\"}</td>\r\n      <td>${student.isEnrolled ? \"Так\" : \"Ні\"}</td>\r\n      <td>\r\n  <button class=\"update-btn\" data-id=\"${student.id}\">Оновити</button>\r\n  <button class=\"delete-btn\" data-id=\"${student.id}\">Видалити</button>\r\n</td>\r\n    `;\r\n    tbody.appendChild(tr);\r\n    tr.querySelector('.update-btn').addEventListener('click', () => {\r\n  updateStudent(student.id);\r\n});\r\n\r\ntr.querySelector('.delete-btn').addEventListener('click', () => {\r\n  deleteStudent(student.id);\r\n});\r\n  });\r\n}\r\n\r\nfunction addStudent(e) {\r\n  e.preventDefault();\r\n\r\n  const name = document.getElementById(\"name\").value.trim();\r\n  const age = Number(document.getElementById(\"age\").value.trim());\r\n  const course = document.getElementById(\"course\").value.trim();\r\n  const skills = document.getElementById(\"skills\").value.trim();\r\n  const email = document.getElementById(\"email\").value.trim();\r\n  const isEnrolled = document.getElementById(\"isEnrolled\").checked;\r\n\r\n  fetch(API_URL, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ name, age, course, skills, email, isEnrolled }),\r\n  })\r\n    .then(() => {\r\n      getStudents();\r\n      e.target.reset();\r\n    })\r\n    .catch((err) => console.error(\"Помилка додавання:\", err));\r\n}\r\n\r\nfunction updateStudent(id) {\r\n  const name = prompt(\"Нове ім'я:\");\r\n  const age = prompt(\"Новий вік:\");\r\n\r\n  fetch(`${API_URL}/${id}`, {\r\n    method: \"PATCH\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ name, age: Number(age) }),\r\n  })\r\n    .then(() => getStudents())\r\n    .catch((err) => console.error(\"Помилка оновлення:\", err));\r\n}\r\n\r\nfunction deleteStudent(id) {\r\n  fetch(`${API_URL}/${id}`, {\r\n    method: \"DELETE\",\r\n  })\r\n    .then(() => getStudents())\r\n    .catch((err) => console.error(\"Помилка видалення:\", err));\r\n}\r\n"]}